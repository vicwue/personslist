<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>com.sap.hana.cloud.sample</groupId>
		<artifactId>personslist</artifactId>
		<version>0.0.1-SNAPSHOT</version>
	</parent>

	<artifactId>personslist-web-vic</artifactId>
	<packaging>war</packaging>

	<dependencies>
	<!-- SAP OData dependencies -->
<dependency>
	<groupId>com.sap.odata</groupId>
	<artifactId>com.sap.core.odata.api</artifactId>
	<version>0.4.1</version>
</dependency>
<dependency>
	<groupId>com.sap.odata</groupId>
	<artifactId>com.sap.core.odata.core</artifactId>
	<version>0.4.1</version>
</dependency>
<dependency>
	<groupId>com.sap.odata</groupId>
	<artifactId>com.sap.core.odata.processor.api</artifactId>
	<version>0.4.1</version>
</dependency>
<dependency>
	<groupId>com.sap.odata</groupId>
	<artifactId>com.sap.core.odata.processor.core</artifactId>
	<version>0.4.1</version>
</dependency>
		<dependency>
			<groupId>com.sap.hana.cloud.sample</groupId>
			<artifactId>personslist-model-jpa</artifactId>
			<version>0.0.1-SNAPSHOT</version>
		</dependency>
		<!-- SAP HANA Cloud SDK dependencies -->
		<dependency>
			<groupId>com.sap.cloud</groupId>
			<artifactId>neo-sdk-core-api</artifactId>
			<version>${sap.cloud.sdk.version}</version>
			<scope>system</scope>
			<systemPath>${sap.cloud.sdk.path}/api/neo-sdk-core-api-${sap.cloud.sdk.version}.jar</systemPath>
		</dependency>
		<dependency>
			<groupId>com.sap.core.persistence.osgi</groupId>
			<artifactId>com.sap.core.persistence.osgi.hdb.platform</artifactId>
			<version>${persistence.osgi.hdb.platform.version}</version>
			<scope>system</scope>
			<systemPath>${sap.cloud.sdk.path}/repository/plugins/com.sap.core.persistence.osgi.hdb.platform_${persistence.osgi.hdb.platform.version}.jar</systemPath>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>3.0.1</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
			<version>4.2.3</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.7.2</version>
			<scope>provided</scope>
		</dependency>
		<!-- SAP UI5 dependencies -->
		<dependency>
			<groupId>com.sap.ui5.commons</groupId>
			<artifactId>com.sap.ui5.commons</artifactId>
			<version>${sap.cloud.ui5.version}</version>
			<scope>system</scope>
			<systemPath>${eclipse.path}/plugins/com.sap.ui5.commons_${sap.cloud.ui5.version}.jar</systemPath>
		</dependency>
		<dependency>
			<groupId>com.sap.ui5.core</groupId>
			<artifactId>com.sap.ui5.core</artifactId>
			<version>${sap.cloud.ui5.version}</version>
			<scope>system</scope>
			<systemPath>${eclipse.path}/plugins/com.sap.ui5.core_${sap.cloud.ui5.version}.jar</systemPath>
		</dependency>
		<dependency>
			<groupId>com.sap.ui5.makit</groupId>
			<artifactId>com.sap.ui5.makit</artifactId>
			<version>${sap.cloud.ui5.version}</version>
			<scope>system</scope>
			<systemPath>${eclipse.path}/plugins/com.sap.ui5.makit_${sap.cloud.ui5.version}.jar</systemPath>
		</dependency>
		<dependency>
			<groupId>com.sap.ui5.mobile</groupId>
			<artifactId>com.sap.ui5.mobile</artifactId>
			<version>${sap.cloud.ui5.version}</version>
			<scope>system</scope>
			<systemPath>${eclipse.path}/plugins/com.sap.ui5.mobile_${sap.cloud.ui5.version}.jar</systemPath>
		</dependency>
		<dependency>
			<groupId>com.sap.ui5.resource</groupId>
			<artifactId>com.sap.ui5.resource</artifactId>
			<version>${sap.cloud.ui5.version}</version>
			<scope>system</scope>
			<systemPath>${eclipse.path}/plugins/com.sap.ui5.resource_${sap.cloud.ui5.version}.jar</systemPath>
		</dependency>
		<dependency>
			<groupId>com.sap.ui5.richtexteditor</groupId>
			<artifactId>com.sap.ui5.richtexteditor</artifactId>
			<version>${sap.cloud.ui5.version}</version>
			<scope>system</scope>
			<systemPath>${eclipse.path}/plugins/com.sap.ui5.richtexteditor_${sap.cloud.ui5.version}.jar</systemPath>
		</dependency>
		<dependency>
			<groupId>com.sap.ui5.table</groupId>
			<artifactId>com.sap.ui5.table</artifactId>
			<version>${sap.cloud.ui5.version}</version>
			<scope>system</scope>
			<systemPath>${eclipse.path}/plugins/com.sap.ui5.table_${sap.cloud.ui5.version}.jar</systemPath>
		</dependency>
		<dependency>
			<groupId>com.sap.ui5.themelib_sap_goldreflection</groupId>
			<artifactId>com.sap.ui5.themelib_sap_goldreflection</artifactId>
			<version>${sap.cloud.ui5.version}</version>
			<scope>system</scope>
			<systemPath>${eclipse.path}/plugins/com.sap.ui5.themelib_sap_goldreflection_${sap.cloud.ui5.version}.jar</systemPath>
		</dependency>
		<dependency>
			<groupId>com.sap.ui5.themelib_sap_ux</groupId>
			<artifactId>com.sap.ui5.themelib_sap_ux</artifactId>
			<version>${sap.cloud.ui5.version}</version>
			<scope>system</scope>
			<systemPath>${eclipse.path}/plugins/com.sap.ui5.themelib_sap_ux_${sap.cloud.ui5.version}.jar</systemPath>
		</dependency>
		<dependency>
			<groupId>com.sap.ui5.utils</groupId>
			<artifactId>com.sap.ui5.utils</artifactId>
			<version>${sap.cloud.ui5.version}</version>
			<scope>system</scope>
			<systemPath>${eclipse.path}/plugins/com.sap.ui5.utils_${sap.cloud.ui5.version}.jar</systemPath>
		</dependency>
		<dependency>
			<groupId>com.sap.ui5.ux3</groupId>
			<artifactId>com.sap.ui5.ux3</artifactId>
			<version>${sap.cloud.ui5.version}</version>
			<scope>system</scope>
			<systemPath>${eclipse.path}/plugins/com.sap.ui5.ux3_${sap.cloud.ui5.version}.jar</systemPath>
		</dependency>
		<dependency>
			<groupId>com.sap.ui5.visualization</groupId>
			<artifactId>com.sap.ui5.visualization</artifactId>
			<version>${sap.cloud.ui5.version}</version>
			<scope>system</scope>
			<systemPath>${eclipse.path}/plugins/com.sap.ui5.visualization_${sap.cloud.ui5.version}.jar</systemPath>
		</dependency>
		<dependency>
			<groupId>com.sap.ui5.viz</groupId>
			<artifactId>com.sap.ui5.viz</artifactId>
			<version>${sap.cloud.ui5.version}</version>
			<scope>system</scope>
			<systemPath>${eclipse.path}/plugins/com.sap.ui5.viz_${sap.cloud.ui5.version}.jar</systemPath>
		</dependency>
	</dependencies>

	<build>
		<finalName>${project.artifactId}</finalName>
		<plugins>
			<plugin>
				<artifactId>maven-clean-plugin</artifactId>
				<version>2.5</version>
				<configuration>
					<filesets>
						<fileset>
							<directory>${project.basedir}/src/main/webapp/WEB-INF/lib</directory>
							<includes>
								<include>com.sap.ui5*.*</include>
								<include>com.sap.core.persistence.osgi*.*</include>
							</includes>
						</fileset>
					</filesets>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>2.4</version>
				<executions>
					<execution>
						<id>copy-dependencies</id>
						<phase>process-sources</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.basedir}/src/main/webapp/WEB-INF/lib</outputDirectory>
							<includeGroupIds>
								com.sap.core.persistence.osgi,com.sap.ui5.commons,com.sap.ui5.core,com.sap.ui5.makit,com.sap.ui5.mobile,com.sap.ui5.resource,com.sap.ui5.richtexteditor,com.sap.ui5.table,com.sap.ui5.themelib_sap_goldreflection,com.sap.ui5.themelib_sap_ux,com.sap.ui5.utils,com.sap.ui5.ux3,com.sap.ui5.visualization,com.sap.ui5.viz
							</includeGroupIds>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<!-- Install local server from the P2 repository that is contained inside
			the SDK, deploy the built web application into it, start local server, wait
			for it and the built and deployed web application to become available, integration-test
			the web application on the local server, and stop the local server finally -->
		<profile>
			<id>local-integration-tests</id>
			<activation>
				<property>
					<name>local.integration.tests</name>
				</property>
			</activation>
			<build>
				<plugins>
					<!-- Find free random ports for the local test server -->
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>build-helper-maven-plugin</artifactId>
						<version>1.7</version>
						<executions>
							<execution>
								<id>reserve-network-port</id>
								<goals>
									<goal>reserve-network-port</goal>
								</goals>
								<phase>validate</phase>
								<configuration>
									<portNames>
										<portName>local.server.console.port</portName>
										<portName>local.server.jmx.port</portName>
										<portName>local.server.http.port</portName>
										<portName>local.server.https.port</portName>
										<portName>local.server.ajp.port</portName>
									</portNames>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>1.7</version>
						<executions>
							<execution>
								<id>prepare-local-server</id>
								<phase>pre-integration-test</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<target>
										<copy file="${project.build.directory}/${project.artifactId}.war"
											todir="${local.server.root}/pickup" />
										<exec dir="${sap.cloud.sdk.path}/tools" executable="${sap.cloud.console.shell}"
											failonerror="true">
											<arg
												line="${sap.cloud.console.script} install-local --location ${local.server.root} --jmxPort ${local.server.jmx.port} --httpPort ${local.server.http.port} --httpsPort ${local.server.https.port} --ajpPort ${local.server.ajp.port} ${local.server.proxy.settings}" />
										</exec>
										<copy
											todir="${local.server.root}/config_master/service.destinations/destinations">
											<fileset dir="${destinations.path}" />
										</copy>
										<exec dir="${sap.cloud.sdk.path}/tools" executable="${sap.cloud.console.shell}"
											failonerror="true">
											<arg
												line="${sap.cloud.console.script} start-local --location ${local.server.root} --consolePort ${local.server.console.port} --waitUrl http://${local.server.host}:${local.server.http.port}/${project.artifactId}/ --waitUrlTimeout 120" />
										</exec>
									</target>
								</configuration>
							</execution>
							<execution>
								<id>cleanup-local-server</id>
								<phase>post-integration-test</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<target>
										<exec dir="${sap.cloud.sdk.path}/tools" executable="${sap.cloud.console.shell}"
											failonerror="true">
											<arg
												line="${sap.cloud.console.script} stop-local --consolePort ${local.server.console.port}" />
										</exec>
									</target>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<artifactId>maven-failsafe-plugin</artifactId>
						<version>2.14</version>
						<executions>
							<execution>
								<id>execute-local-integration-tests</id>
								<goals>
									<goal>integration-test</goal>
								</goals>
								<configuration>
									<argLine>${browser.proxy.settings}</argLine>
									<systemPropertyVariables>
										<integration.test.server.url>http://${local.server.host}:${local.server.http.port}</integration.test.server.url>
										<webdriver.firefox.bin>${webdriver.firefox.bin}</webdriver.firefox.bin>
									</systemPropertyVariables>
								</configuration>
							</execution>
							<execution>
								<id>verify-local-integration-tests</id>
								<goals>
									<goal>verify</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

</project>